[{"/home/ramza/w/mintak-fe/src/index.js":"1","/home/ramza/w/mintak-fe/src/polyfills.js":"2","/home/ramza/w/mintak-fe/src/App.js":"3","/home/ramza/w/mintak-fe/src/reportWebVitals.js":"4","/home/ramza/w/mintak-fe/src/Content.js":"5","/home/ramza/w/mintak-fe/src/UnauthenticatedContent.js":"6","/home/ramza/w/mintak-fe/src/contexts/navigation.js":"7","/home/ramza/w/mintak-fe/src/contexts/auth.js":"8","/home/ramza/w/mintak-fe/src/utils/media-query.js":"9","/home/ramza/w/mintak-fe/src/app-routes.js":"10","/home/ramza/w/mintak-fe/src/app-info.js":"11","/home/ramza/w/mintak-fe/src/api/auth.js":"12","/home/ramza/w/mintak-fe/src/layouts/index.js":"13","/home/ramza/w/mintak-fe/src/components/index.js":"14","/home/ramza/w/mintak-fe/src/utils/default-user.js":"15","/home/ramza/w/mintak-fe/src/pages/index.js":"16","/home/ramza/w/mintak-fe/src/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.js":"17","/home/ramza/w/mintak-fe/src/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.js":"18","/home/ramza/w/mintak-fe/src/layouts/single-card/single-card.js":"19","/home/ramza/w/mintak-fe/src/components/header/header.js":"20","/home/ramza/w/mintak-fe/src/components/login-form/login-form.js":"21","/home/ramza/w/mintak-fe/src/components/reset-password-form/reset-password-form.js":"22","/home/ramza/w/mintak-fe/src/components/create-account-form/create-account-form.js":"23","/home/ramza/w/mintak-fe/src/components/footer/footer.js":"24","/home/ramza/w/mintak-fe/src/components/side-navigation-menu/side-navigation-menu.js":"25","/home/ramza/w/mintak-fe/src/components/change-password-form/change-password-form.js":"26","/home/ramza/w/mintak-fe/src/pages/tasks/tasks.js":"27","/home/ramza/w/mintak-fe/src/app-navigation.js":"28","/home/ramza/w/mintak-fe/src/components/user-panel/user-panel.js":"29","/home/ramza/w/mintak-fe/src/utils/patches.js":"30","/home/ramza/w/mintak-fe/src/pages/profile/profile.js":"31","/home/ramza/w/mintak-fe/src/pages/home/home.js":"32","/home/ramza/w/mintak-fe/src/pages/about/about.js":"33","/home/ramza/w/mintak-fe/src/pages/calendar/calendar.js":"34","/home/ramza/w/mintak-fe/src/utils/current-user.js":"35","/home/ramza/w/mintak-fe/src/api/rest-api.js":"36"},{"size":522,"mtime":1610920023622,"results":"37","hashOfConfig":"38"},{"size":70,"mtime":1610920023618,"results":"39","hashOfConfig":"38"},{"size":1045,"mtime":1610971774906,"results":"40","hashOfConfig":"38"},{"size":362,"mtime":1610920009543,"results":"41","hashOfConfig":"38"},{"size":742,"mtime":1610971809412,"results":"42","hashOfConfig":"38"},{"size":1112,"mtime":1610920023598,"results":"43","hashOfConfig":"38"},{"size":773,"mtime":1610934535363,"results":"44","hashOfConfig":"38"},{"size":935,"mtime":1610971771622,"results":"45","hashOfConfig":"38"},{"size":1518,"mtime":1610920023618,"results":"46","hashOfConfig":"38"},{"size":551,"mtime":1610934450516,"results":"47","hashOfConfig":"38"},{"size":41,"mtime":1610920023598,"results":"48","hashOfConfig":"38"},{"size":2078,"mtime":1610970441397,"results":"49","hashOfConfig":"38"},{"size":263,"mtime":1610920023614,"results":"50","hashOfConfig":"38"},{"size":536,"mtime":1610920023610,"results":"51","hashOfConfig":"38"},{"size":145,"mtime":1610941217859,"results":"52","hashOfConfig":"38"},{"size":282,"mtime":1610934409790,"results":"53","hashOfConfig":"38"},{"size":3529,"mtime":1610920023618,"results":"54","hashOfConfig":"38"},{"size":4041,"mtime":1610920023614,"results":"55","hashOfConfig":"38"},{"size":490,"mtime":1610920023618,"results":"56","hashOfConfig":"38"},{"size":1262,"mtime":1610920023610,"results":"57","hashOfConfig":"38"},{"size":2584,"mtime":1610967400403,"results":"58","hashOfConfig":"38"},{"size":2306,"mtime":1610920023614,"results":"59","hashOfConfig":"38"},{"size":3528,"mtime":1610965899364,"results":"60","hashOfConfig":"38"},{"size":141,"mtime":1610920023610,"results":"61","hashOfConfig":"38"},{"size":2190,"mtime":1610920023614,"results":"62","hashOfConfig":"38"},{"size":2507,"mtime":1610920023606,"results":"63","hashOfConfig":"38"},{"size":7091,"mtime":1610977943444,"results":"64","hashOfConfig":"38"},{"size":394,"mtime":1610941023607,"results":"65","hashOfConfig":"38"},{"size":1535,"mtime":1610972518706,"results":"66","hashOfConfig":"38"},{"size":445,"mtime":1610920023618,"results":"67","hashOfConfig":"38"},{"size":2309,"mtime":1610976676949,"results":"68","hashOfConfig":"38"},{"size":2130,"mtime":1610977668838,"results":"69","hashOfConfig":"38"},{"size":309,"mtime":1610920938588,"results":"70","hashOfConfig":"38"},{"size":1291,"mtime":1610974059970,"results":"71","hashOfConfig":"38"},{"size":686,"mtime":1610976925795,"results":"72","hashOfConfig":"38"},{"size":1597,"mtime":1610976429595,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"bn2q6j",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/ramza/w/mintak-fe/src/index.js",[],["167","168"],"/home/ramza/w/mintak-fe/src/polyfills.js",[],"/home/ramza/w/mintak-fe/src/App.js",["169"],"import 'devextreme/dist/css/dx.common.css';\nimport './themes/generated/theme.base.css';\nimport './themes/generated/theme.additional.css';\nimport React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './dx-styles.scss';\nimport LoadPanel from 'devextreme-react/load-panel';\nimport { NavigationProvider } from './contexts/navigation';\nimport { AuthProvider, useAuth } from './contexts/auth';\nimport { useScreenSizeClass } from './utils/media-query';\nimport Content from './Content';\nimport UnauthenticatedContent from './UnauthenticatedContent';\n\nfunction App() {\n\tconst { user, loading } = useAuth();\n\n\tif (loading) {\n\t\treturn <LoadPanel visible={true} />;\n\t}\n\n\tif (user) {\n\t\treturn <Content />;\n\t}\n\n\treturn <UnauthenticatedContent />;\n}\n\nexport default function () {\n\tconst screenSizeClass = useScreenSizeClass();\n\n\treturn (\n\t\t<Router>\n\t\t\t<AuthProvider>\n\t\t\t\t<NavigationProvider>\n\t\t\t\t\t<div className={`app ${screenSizeClass}`}>\n\t\t\t\t\t\t<App />\n\t\t\t\t\t</div>\n\t\t\t\t</NavigationProvider>\n\t\t\t</AuthProvider>\n\t\t</Router>\n\t);\n}\n","/home/ramza/w/mintak-fe/src/reportWebVitals.js",[],"/home/ramza/w/mintak-fe/src/Content.js",["170"],"import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport appInfo from './app-info';\nimport routes from './app-routes';\nimport { SideNavInnerToolbar as SideNavBarLayout } from './layouts';\nimport { Footer } from './components';\n\nexport default function () {\n\treturn (\n\t\t<SideNavBarLayout title={appInfo.title}>\n\t\t\t<Switch>\n\t\t\t\t{routes.map(({ path, component }) => (\n\t\t\t\t\t<Route exact key={path} path={path} component={component} />\n\t\t\t\t))}\n\t\t\t\t<Redirect to={'/home'} />\n\t\t\t</Switch>\n\t\t\t<Footer>\n\t\t\t\tCopyright © 2011-{new Date().getFullYear()} {appInfo.title} Inc.\n\t\t\t\t<br />\n\t\t\t\tAll trademarks or registered trademarks are property of their respective\n\t\t\t\towners.\n\t\t\t</Footer>\n\t\t</SideNavBarLayout>\n\t);\n}\n","/home/ramza/w/mintak-fe/src/UnauthenticatedContent.js",["171"],"import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { SingleCard } from './layouts';\nimport { LoginForm, ResetPasswordForm, ChangePasswordForm, CreateAccountForm } from './components';\n\nexport default function () {\n  return (\n    <Switch>\n      <Route exact path='/login' >\n        <SingleCard title=\"Sign In\">\n          <LoginForm />\n        </SingleCard>\n      </Route>\n      <Route exact path='/create-account' >\n        <SingleCard title=\"Sign Up\">\n          <CreateAccountForm />\n        </SingleCard>\n      </Route>\n      <Route exact path='/reset-password' >\n        <SingleCard\n          title=\"Reset Password\"\n          description=\"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\n        >\n          <ResetPasswordForm />\n        </SingleCard>\n      </Route>\n      <Route exact path='/change-password/:recoveryCode' >\n        <SingleCard title=\"Change Password\">\n          <ChangePasswordForm />\n        </SingleCard>\n      </Route>\n      <Redirect to={'/login'} />\n    </Switch>\n  );\n}\n","/home/ramza/w/mintak-fe/src/contexts/navigation.js",[],"/home/ramza/w/mintak-fe/src/contexts/auth.js",[],"/home/ramza/w/mintak-fe/src/utils/media-query.js",[],"/home/ramza/w/mintak-fe/src/app-routes.js",[],"/home/ramza/w/mintak-fe/src/app-info.js",["172"],"export default {\n  title: 'Mintak Fe'\n};\n","/home/ramza/w/mintak-fe/src/api/auth.js",["173"],"import CurrentUser from '../utils/current-user';\nconst bcrypt = require('bcryptjs');\n\n// singleton login\n\nexport async function signIn(oUser) {\n\ttry {\n\t\t// Send request\n\n\t\t// const salt = await bcrypt.genSalt(10);\n\t\t// const hashPassword = await bcrypt.hash(oUser.password, salt);\n\t\t// oUser.password = hashPassword;\n\n\t\tconst loggedInUser = await fetch('/auth/login/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(oUser),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((user) => {\n\t\t\t\treturn user;\n\t\t\t});\n\n\t\tCurrentUser().setData(loggedInUser);\n\n\t\treturn {\n\t\t\tisOk: loggedInUser.message === undefined,\n\t\t\tdata: loggedInUser,\n\t\t\tmessage: JSON.stringify(loggedInUser.message),\n\t\t};\n\t} catch (err) {\n\t\treturn {\n\t\t\tisOk: false,\n\t\t\tmessage: err.message,\n\t\t};\n\t}\n}\n\nexport async function getUser() {\n\ttry {\n\t\t// Send request\n\n\t\treturn {\n\t\t\tisOk: true,\n\t\t\tdata: CurrentUser(),\n\t\t};\n\t} catch {\n\t\treturn {\n\t\t\tisOk: false,\n\t\t};\n\t}\n}\n\nexport async function createAccount(oUser) {\n\ttry {\n\t\t// Send request\n\n\t\t// const salt = await bcrypt.genSalt(10);\n\t\t// const hashPassword = await bcrypt.hash(oUser.password, salt);\n\t\t// oUser.password = hashPassword;\n\n\t\tconst newUser = await fetch('/auth/register/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(oUser),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((newUser) => {\n\t\t\t\treturn newUser;\n\t\t\t});\n\n\t\treturn {\n\t\t\tisOk: newUser.message === undefined,\n\t\t\tmessage: JSON.stringify(newUser.message),\n\t\t};\n\t} catch {\n\t\treturn {\n\t\t\tisOk: false,\n\t\t\tmessage: 'Failed to create account',\n\t\t};\n\t}\n}\n\nexport async function changePassword(email, recoveryCode) {\n\ttry {\n\t\t// Send request\n\t\tconsole.log(email, recoveryCode);\n\n\t\treturn {\n\t\t\tisOk: true,\n\t\t};\n\t} catch {\n\t\treturn {\n\t\t\tisOk: false,\n\t\t\tmessage: 'Failed to change password',\n\t\t};\n\t}\n}\n\nexport async function resetPassword(email) {\n\ttry {\n\t\t// Send request\n\t\tconsole.log(email);\n\n\t\treturn {\n\t\t\tisOk: true,\n\t\t};\n\t} catch {\n\t\treturn {\n\t\t\tisOk: false,\n\t\t\tmessage: 'Failed to reset password',\n\t\t};\n\t}\n}\n","/home/ramza/w/mintak-fe/src/layouts/index.js",[],"/home/ramza/w/mintak-fe/src/components/index.js",[],"/home/ramza/w/mintak-fe/src/utils/default-user.js",["174"],"export default {\n\temail: 'jkiss@example.com',\n\tavatarUrl:\n\t\t'https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/images/employees/06.png',\n};\n",["175","176"],"/home/ramza/w/mintak-fe/src/pages/index.js",[],"/home/ramza/w/mintak-fe/src/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.js",["177"],"import Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-outer-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  );\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-outer-toolbar'}>\n      <Header\n        className={'layout-header'}\n        menuToggleEnabled\n        toggleMenu={toggleMenu}\n        title={title}\n      />\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","/home/ramza/w/mintak-fe/src/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.js",["178"],"import Button from 'devextreme-react/button';\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-inner-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  );\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-inner-toolbar'}>\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <Header\n            menuToggleEnabled={isXSmall}\n            toggleMenu={toggleMenu}\n          />\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n            <Toolbar id={'navigation-header'}>\n              {\n                !isXSmall &&\n                <Item\n                  location={'before'}\n                  cssClass={'menu-button'}\n                >\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n                </Item>\n              }\n              <Item location={'before'} cssClass={'header-title'} text={title} />\n            </Toolbar>\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n","/home/ramza/w/mintak-fe/src/layouts/single-card/single-card.js",["179"],"import React from 'react';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport './single-card.scss';\n\nexport default ({ title, description, children }) => (\n  <ScrollView height={'100%'} width={'100%'} className={'with-footer single-card'}>\n    <div className={'dx-card content'}>\n      <div className={'header'}>\n        <div className={'title'}>{title}</div>\n        <div className={'description'}>{description}</div>\n      </div>\n      {children}\n    </div>\n  </ScrollView>\n);\n","/home/ramza/w/mintak-fe/src/components/header/header.js",["180"],"import React from 'react';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport Button from 'devextreme-react/button';\nimport UserPanel from '../user-panel/user-panel';\nimport './header.scss';\nimport { Template } from 'devextreme-react/core/template';\n\nexport default ({ menuToggleEnabled, title, toggleMenu }) => (\n  <header className={'header-component'}>\n    <Toolbar className={'header-toolbar'}>\n      <Item\n        visible={menuToggleEnabled}\n        location={'before'}\n        widget={'dxButton'}\n        cssClass={'menu-button'}\n      >\n        <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n      </Item>\n      <Item\n        location={'before'}\n        cssClass={'header-title'}\n        text={title}\n        visible={!!title}\n      />\n      <Item\n        location={'after'}\n        locateInMenu={'auto'}\n        menuItemTemplate={'userPanelTemplate'}\n      >\n        <Button\n          className={'user-button authorization'}\n          width={210}\n          height={'100%'}\n          stylingMode={'text'}\n        >\n          <UserPanel menuMode={'context'} />\n        </Button>\n      </Item>\n      <Template name={'userPanelTemplate'}>\n        <UserPanel menuMode={'list'} />\n      </Template>\n    </Toolbar>\n  </header>\n);\n\n","/home/ramza/w/mintak-fe/src/components/login-form/login-form.js",["181","182"],"import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Form, {\n\tItem,\n\tLabel,\n\tButtonItem,\n\tButtonOptions,\n\tRequiredRule,\n\tEmailRule,\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useAuth } from '../../contexts/auth';\n\nimport './login-form.scss';\n\nexport default function () {\n\tconst history = useHistory();\n\tconst { signIn } = useAuth();\n\tconst [loading, setLoading] = useState(false);\n\tconst formData = useRef({});\n\n\tconst onSubmit = useCallback(\n\t\tasync (e) => {\n\t\t\te.preventDefault();\n\t\t\tsetLoading(true);\n\n\t\t\tconst result = await signIn(formData.current);\n\t\t\tif (!result.isOk) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tnotify(result.message, 'error', 2000);\n\t\t\t}\n\t\t},\n\t\t[signIn]\n\t);\n\n\tconst onCreateAccountClick = useCallback(() => {\n\t\thistory.push('/create-account');\n\t}, [history]);\n\n\treturn (\n\t\t<form className={'login-form'} onSubmit={onSubmit}>\n\t\t\t<Form formData={formData.current} disabled={loading}>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'username'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={usernameEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"User is required\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'password'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={passwordEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"Password is required\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'rememberMe'}\n\t\t\t\t\teditorType={'dxCheckBox'}\n\t\t\t\t\teditorOptions={rememberMeEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<ButtonItem>\n\t\t\t\t\t<ButtonOptions\n\t\t\t\t\t\twidth={'100%'}\n\t\t\t\t\t\ttype={'default'}\n\t\t\t\t\t\tuseSubmitBehavior={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"dx-button-text\">\n\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t<LoadIndicator width={'24px'} height={'24px'} visible={true} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'Sign In'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</ButtonOptions>\n\t\t\t\t</ButtonItem>\n\t\t\t\t<Item>\n\t\t\t\t\t<div className={'link'}>\n\t\t\t\t\t\t<Link to={'/reset-password'}>Forgot password?</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Item>\n\t\t\t\t<ButtonItem>\n\t\t\t\t\t<ButtonOptions\n\t\t\t\t\t\ttext={'Create an account'}\n\t\t\t\t\t\twidth={'100%'}\n\t\t\t\t\t\tonClick={onCreateAccountClick}\n\t\t\t\t\t/>\n\t\t\t\t</ButtonItem>\n\t\t\t</Form>\n\t\t</form>\n\t);\n}\n\nconst usernameEditorOptions = { stylingMode: 'filled', placeholder: 'User' };\n\nconst passwordEditorOptions = {\n\tstylingMode: 'filled',\n\tplaceholder: 'Password',\n\tmode: 'password',\n};\nconst rememberMeEditorOptions = {\n\ttext: 'Remember me',\n\telementAttr: { class: 'form-text' },\n};\n","/home/ramza/w/mintak-fe/src/components/reset-password-form/reset-password-form.js",["183"],"import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { resetPassword } from '../../api/auth';\nimport './reset-password-form.scss';\n\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\n\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    const { email } = formData.current;\n    setLoading(true);\n\n    const result = await resetPassword(email);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n      notify(notificationText, 'success', 2500);\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history]);\n\n  return (\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            elementAttr={submitButtonAttributes}\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Reset my password'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'login-link'}>\n            Return to <Link to={'/login'}>Sign In</Link>\n          </div>\n        </Item>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst submitButtonAttributes = { class: 'submit-button' };\n","/home/ramza/w/mintak-fe/src/components/create-account-form/create-account-form.js",["184"],"import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Form, {\n\tItem,\n\tLabel,\n\tButtonItem,\n\tButtonOptions,\n\tRequiredRule,\n\tCustomRule,\n\tEmailRule,\n} from 'devextreme-react/form';\nimport notify from 'devextreme/ui/notify';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport { createAccount } from '../../api/auth';\nimport './create-account-form.scss';\n\nexport default function (props) {\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(false);\n\tconst formData = useRef({});\n\n\tconst onSubmit = useCallback(\n\t\tasync (e) => {\n\t\t\te.preventDefault();\n\t\t\tsetLoading(true);\n\n\t\t\tconst result = await createAccount(formData.current);\n\t\t\tsetLoading(false);\n\n\t\t\tif (result.isOk) {\n\t\t\t\thistory.push('/login');\n\t\t\t} else {\n\t\t\t\tnotify(result.message, 'error', 2000);\n\t\t\t}\n\t\t},\n\t\t[history]\n\t);\n\n\tconst confirmPassword = useCallback(\n\t\t({ value }) => value === formData.current.password,\n\t\t[]\n\t);\n\n\treturn (\n\t\t<form className={'create-account-form'} onSubmit={onSubmit}>\n\t\t\t<Form formData={formData.current} disabled={loading}>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'username'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={usernameEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"User is required\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'password'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={passwordEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"Password is required\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'confirmedPassword'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={confirmedPasswordEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"Password is required\" />\n\t\t\t\t\t<CustomRule\n\t\t\t\t\t\tmessage={'Passwords do not match'}\n\t\t\t\t\t\tvalidationCallback={confirmPassword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'email'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={emailEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"Email is required\" />\n\t\t\t\t\t<EmailRule message=\"Email is invalid\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item\n\t\t\t\t\tdataField={'cnp'}\n\t\t\t\t\teditorType={'dxTextBox'}\n\t\t\t\t\teditorOptions={cnpEditorOptions}\n\t\t\t\t>\n\t\t\t\t\t<RequiredRule message=\"CNP is required\" />\n\t\t\t\t\t<Label visible={false} />\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<div className=\"policy-info\">\n\t\t\t\t\t\tBy creating an account, you agree to the{' '}\n\t\t\t\t\t\t<Link to=\"#\">Terms of Service</Link> and{' '}\n\t\t\t\t\t\t<Link to=\"#\">Privacy Policy</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Item>\n\t\t\t\t<ButtonItem>\n\t\t\t\t\t<ButtonOptions\n\t\t\t\t\t\twidth={'100%'}\n\t\t\t\t\t\ttype={'default'}\n\t\t\t\t\t\tuseSubmitBehavior={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"dx-button-text\">\n\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t<LoadIndicator width={'24px'} height={'24px'} visible={true} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'Create a new account'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</ButtonOptions>\n\t\t\t\t</ButtonItem>\n\t\t\t\t<Item>\n\t\t\t\t\t<div className={'login-link'}>\n\t\t\t\t\t\tHave an account? <Link to={'/login'}>Sign In</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Item>\n\t\t\t</Form>\n\t\t</form>\n\t);\n}\n\nconst usernameEditorOptions = { stylingMode: 'filled', placeholder: 'User' };\nconst cnpEditorOptions = { stylingMode: 'filled', placeholder: 'CNP' };\nconst emailEditorOptions = {\n\tstylingMode: 'filled',\n\tplaceholder: 'Email',\n\tmode: 'email',\n};\nconst passwordEditorOptions = {\n\tstylingMode: 'filled',\n\tplaceholder: 'Password',\n\tmode: 'password',\n};\nconst confirmedPasswordEditorOptions = {\n\tstylingMode: 'filled',\n\tplaceholder: 'Confirm Password',\n\tmode: 'password',\n};\n","/home/ramza/w/mintak-fe/src/components/footer/footer.js",["185"],"import React from 'react';\nimport './footer.scss';\n\nexport default ({ ...rest }) => {\n  return <footer className={'footer'} {...rest} />;\n};\n","/home/ramza/w/mintak-fe/src/components/side-navigation-menu/side-navigation-menu.js",["186"],"import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport TreeView from 'devextreme-react/tree-view';\nimport { navigation } from '../../app-navigation';\nimport { useNavigation } from '../../contexts/navigation';\nimport { useScreenSize } from '../../utils/media-query';\nimport './side-navigation-menu.scss';\n\nimport * as events from 'devextreme/events';\n\nexport default function (props) {\n  const {\n    children,\n    selectedItemChanged,\n    openMenu,\n    compactMode,\n    onMenuReady\n  } = props;\n\n  const { isLarge } = useScreenSize();\n  function normalizePath () {    \n    return navigation.map((item) => {\n      if(item.path && !(/^\\//.test(item.path))){ \n        item.path = `/${item.path}`;\n      }\n      return {...item, expanded: isLarge}; \n    });\n  }\n\n  const items = useMemo(\n    normalizePath,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const { navigationData: { currentPath } } = useNavigation();\n\n  const treeViewRef = useRef();\n  const wrapperRef = useRef();\n  const getWrapperRef = useCallback((element) => {\n    const prevElement = wrapperRef.current;\n    if (prevElement) {\n      events.off(prevElement, 'dxclick');\n    }\n\n    wrapperRef.current = element;\n    events.on(element, 'dxclick', e => {\n      openMenu(e);\n    });\n  }, [openMenu]);\n\n  useEffect(() => {\n    const treeView = treeViewRef.current && treeViewRef.current.instance;\n    if (!treeView) {\n      return;\n    }\n\n    if (currentPath !== undefined) {\n      treeView.selectItem(currentPath);\n      treeView.expandItem(currentPath);\n    }\n\n    if (compactMode) {\n      treeView.collapseAll();\n    }\n  }, [currentPath, compactMode]);\n\n  return (\n    <div\n      className={'dx-swatch-additional side-navigation-menu'}\n      ref={getWrapperRef}\n    >\n      {children}\n      <div className={'menu-container'}>\n        <TreeView\n          ref={treeViewRef}\n          items={items}\n          keyExpr={'path'}\n          selectionMode={'single'}\n          focusStateEnabled={false}\n          expandEvent={'click'}\n          onItemClick={selectedItemChanged}\n          onContentReady={onMenuReady}\n          width={'100%'}\n        />\n      </div>\n    </div>\n  );\n}\n","/home/ramza/w/mintak-fe/src/components/change-password-form/change-password-form.js",["187"],"import React, { useState, useRef, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  CustomRule,\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { changePassword } from '../../api/auth';\n\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n  const { recoveryCode } = useParams();\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    const { password } = formData.current;\n    setLoading(true);\n\n    const result = await changePassword(password, recoveryCode);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history, recoveryCode]);\n\n  const confirmPassword = useCallback(\n    ({ value }) => value === formData.current.password,\n    []\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'confirmedPassword'}\n          editorType={'dxTextBox'}\n          editorOptions={confirmedPasswordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <CustomRule\n            message={'Passwords do not match'}\n            validationCallback={confirmPassword}\n          />\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Continue'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n      </Form>\n    </form>\n  );\n}\n\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\n","/home/ramza/w/mintak-fe/src/pages/tasks/tasks.js",["188","189","190","191"],"/home/ramza/w/mintak-fe/src/app-navigation.js",[],"/home/ramza/w/mintak-fe/src/components/user-panel/user-panel.js",["192","193"],"import React, { useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ContextMenu, { Position } from 'devextreme-react/context-menu';\nimport List from 'devextreme-react/list';\nimport { useAuth } from '../../contexts/auth';\nimport './user-panel.scss';\nimport CurrentUser from '../../utils/current-user';\n\nexport default function ({ menuMode }) {\n\tconst { user, signOut } = useAuth();\n\tconst history = useHistory();\n\tconst oUser = CurrentUser();\n\n\tif (!oUser.username) {\n\t\tsignOut();\n\t}\n\n\tfunction navigateToProfile() {\n\t\thistory.push('/profile');\n\t}\n\tconst menuItems = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttext: 'Profile',\n\t\t\t\ticon: 'user',\n\t\t\t\tonClick: navigateToProfile,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Logout',\n\t\t\t\ticon: 'runner',\n\t\t\t\tonClick: signOut,\n\t\t\t},\n\t\t],\n\t\t[signOut]\n\t);\n\n\treturn (\n\t\t<div className={'user-panel'}>\n\t\t\t<div className={'user-info'}>\n\t\t\t\t<div className={'image-container'}>\n\t\t\t\t\t<div\n\t\t\t\t\t\t// style={{\n\t\t\t\t\t\t//   background: `url(${user.avatarUrl}) no-repeat #fff`,\n\t\t\t\t\t\t//   backgroundSize: 'cover'\n\t\t\t\t\t\t// }}\n\t\t\t\t\t\tclassName={'user-image'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={'user-name'}>{user.email}</div>\n\t\t\t</div>\n\n\t\t\t{menuMode === 'context' && (\n\t\t\t\t<ContextMenu\n\t\t\t\t\titems={menuItems}\n\t\t\t\t\ttarget={'.user-button'}\n\t\t\t\t\tshowEvent={'dxclick'}\n\t\t\t\t\twidth={210}\n\t\t\t\t\tcssClass={'user-menu'}\n\t\t\t\t>\n\t\t\t\t\t<Position my={'top center'} at={'bottom center'} />\n\t\t\t\t</ContextMenu>\n\t\t\t)}\n\t\t\t{menuMode === 'list' && (\n\t\t\t\t<List className={'dx-toolbar-menu-action'} items={menuItems} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","/home/ramza/w/mintak-fe/src/utils/patches.js",[],"/home/ramza/w/mintak-fe/src/pages/profile/profile.js",["194"],"import React from 'react';\nimport CurrentUser from '../../utils/current-user';\nimport CrudFacade from '../../api/rest-api';\nimport './profile.scss';\nimport Form, { Item } from 'devextreme-react/form';\n\nconst aNotVisibleFields = [\n\t'_id',\n\t'car',\n\t'pc',\n\t'__v',\n\t'password',\n\t'date_end',\n\t'cnp',\n\t'username',\n\t'comments',\n\t'date_started',\n];\nconst aDisabledFields = ['cnp', 'username'];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuser: {},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// fetch('/users/6004c59c982dabeb26774c61')\n\t\t// \t.then((res) => res.json())\n\t\t// \t.then((user) => {\n\t\t// \t\tthis.setState({ user: user });\n\t\t// \t});\n\n\t\tconst oUser = CurrentUser();\n\t\tthis.oCrudFacade = CrudFacade();\n\t\tthis.setState({ user: oUser });\n\t}\n\n\tcustomizeItem(item) {\n\t\tif (aNotVisibleFields.indexOf(item.dataField) !== -1) {\n\t\t\titem.visible = false;\n\t\t}\n\n\t\tif (aDisabledFields.indexOf(item.dataField) !== -1) {\n\t\t\titem.disabled = true;\n\t\t}\n\t}\n\n\tonFieldDataChanged(oField) {\n\t\tdebugger;\n\t\tconsole.log(JSON.stringify(this.state.user));\n\n\t\tthis.oCrudFacade.patchUser(this.state.user, (user) => {\n\t\t\tconsole.log(user);\n\t\t});\n\n\t\t// fetch('/users/6004c59c982dabeb26774c61', {\n\t\t// \tmethod: 'PATCH',\n\t\t// \theaders: { 'Content-Type': 'application/json' },\n\t\t// \tbody: JSON.stringify(this.state.user),\n\t\t// })\n\t\t// \t.then((res) => res.json())\n\t\t// \t.then((user) => {\n\t\t// \t\tconsole.log(user);\n\t\t// \t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h2 className={'content-block'}>Profile</h2>\n\n\t\t\t\t<div className={'content-block dx-card responsive-paddings'}>\n\t\t\t\t\t<div className={'form-avatar'}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt={''}\n\t\t\t\t\t\t\tsrc={`https://js.devexpress.com/Demos/WidgetsGallery/JSDemos/${this.state.user.Picture}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>{this.state.user.username}</div>\n\t\t\t\t\t<div>{this.state.user.cnp}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={'content-block dx-card responsive-paddings'}>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tid={'form'}\n\t\t\t\t\t\tformData={this.state.user}\n\t\t\t\t\t\tonFieldDataChanged={this.onFieldDataChanged.bind(this)}\n\t\t\t\t\t\tlabelLocation={'top'}\n\t\t\t\t\t\tcolCountByScreen={colCountByScreen}\n\t\t\t\t\t\tcustomizeItem={this.customizeItem}\n\t\t\t\t\t></Form>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst colCountByScreen = {\n\txs: 1,\n\tsm: 2,\n\tmd: 3,\n\tlg: 4,\n};\n\nexport default App;\n","/home/ramza/w/mintak-fe/src/pages/home/home.js",["195","196","197"],"/home/ramza/w/mintak-fe/src/pages/about/about.js",["198"],"import React from 'react';\nimport './about.scss';\n\nexport default () => (\n  <React.Fragment>\n    <h2 className={'content-block'}>About</h2>\n    <div className={'content-block'}>\n      <div className={'dx-card responsive-paddings'}>\n        Put your content here\n      </div>\n    </div>\n  </React.Fragment>\n);\n","/home/ramza/w/mintak-fe/src/pages/calendar/calendar.js",[],"/home/ramza/w/mintak-fe/src/utils/current-user.js",[],"/home/ramza/w/mintak-fe/src/api/rest-api.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":28,"column":1,"nodeType":"205","endLine":42,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":8,"column":1,"nodeType":"205","endLine":25,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":6,"column":1,"nodeType":"205","endLine":35,"endColumn":2},{"ruleId":"203","severity":1,"message":"206","line":1,"column":1,"nodeType":"205","endLine":3,"endColumn":3},{"ruleId":"207","severity":1,"message":"208","line":2,"column":7,"nodeType":"209","messageId":"210","endLine":2,"endColumn":13},{"ruleId":"203","severity":1,"message":"206","line":1,"column":1,"nodeType":"205","endLine":5,"endColumn":3},{"ruleId":"199","replacedBy":"211"},{"ruleId":"201","replacedBy":"212"},{"ruleId":"203","severity":1,"message":"204","line":11,"column":1,"nodeType":"205","endLine":106,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":13,"column":1,"nodeType":"205","endLine":118,"endColumn":2},{"ruleId":"203","severity":1,"message":"213","line":5,"column":1,"nodeType":"205","endLine":15,"endColumn":3},{"ruleId":"203","severity":1,"message":"213","line":8,"column":1,"nodeType":"205","endLine":44,"endColumn":3},{"ruleId":"207","severity":1,"message":"214","line":9,"column":2,"nodeType":"209","messageId":"210","endLine":9,"endColumn":11},{"ruleId":"203","severity":1,"message":"204","line":17,"column":1,"nodeType":"205","endLine":97,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":18,"column":1,"nodeType":"205","endLine":75,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":17,"column":1,"nodeType":"205","endLine":122,"endColumn":2},{"ruleId":"203","severity":1,"message":"213","line":4,"column":1,"nodeType":"205","endLine":6,"endColumn":3},{"ruleId":"203","severity":1,"message":"204","line":10,"column":1,"nodeType":"205","endLine":88,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":15,"column":1,"nodeType":"205","endLine":82,"endColumn":2},{"ruleId":"207","severity":1,"message":"215","line":10,"column":2,"nodeType":"209","messageId":"210","endLine":10,"endColumn":8},{"ruleId":"207","severity":1,"message":"216","line":13,"column":10,"nodeType":"209","messageId":"210","endLine":13,"endColumn":15},{"ruleId":"207","severity":1,"message":"217","line":16,"column":7,"nodeType":"209","messageId":"210","endLine":16,"endColumn":17},{"ruleId":"207","severity":1,"message":"218","line":35,"column":7,"nodeType":"209","messageId":"210","endLine":35,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":9,"column":1,"nodeType":"205","endLine":68,"endColumn":2},{"ruleId":"219","severity":1,"message":"220","line":34,"column":3,"nodeType":"221","endLine":34,"endColumn":12,"suggestions":"222"},{"ruleId":"207","severity":1,"message":"223","line":5,"column":16,"nodeType":"209","messageId":"210","endLine":5,"endColumn":20},{"ruleId":"207","severity":1,"message":"224","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":15},{"ruleId":"207","severity":1,"message":"225","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":16},{"ruleId":"207","severity":1,"message":"226","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":17},{"ruleId":"203","severity":1,"message":"213","line":4,"column":1,"nodeType":"205","endLine":13,"endColumn":3},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'bcrypt' is assigned a value but never used.","Identifier","unusedVar",["227"],["228"],"Assign arrow function to a variable before exporting as module default","'EmailRule' is defined but never used.","'Lookup' is defined but never used.","'Toast' is defined but never used.","'dataSource' is assigned a value but never used.","'priorities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'navigateToProfile'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'Item' is defined but never used.","'TextBox' is defined but never used.","'TextArea' is defined but never used.","'useAuth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},"Update the dependencies array to be: [navigateToProfile, signOut]",{"range":"232","text":"233"},[773,782],"[navigateToProfile, signOut]"]